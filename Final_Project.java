package managamentfile;

import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Path;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.tree.TreePath;

public class Final_Project extends javax.swing.JFrame {
    private DefaultTreeModel treeModel;

    public Final_Project() {
        initComponents();
        initFileTree();
    }
    
    private void initFileTree() {
        File rootFile = new File("D://");
        DefaultMutableTreeNode rootNode = new DefaultMutableTreeNode(rootFile);
        treeModel = new DefaultTreeModel(rootNode);
        jTree1.setModel(treeModel);
        buildFileTree(rootNode, rootFile);
        
        jTree1.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
        public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
            treeSelectionChanged(evt);
        }
    });
    }    
    private void treeSelectionChanged(javax.swing.event.TreeSelectionEvent evt) {
    DefaultMutableTreeNode selectedNode = (DefaultMutableTreeNode) jTree1.getLastSelectedPathComponent();

    if (selectedNode != null) {
        File selectedFile = (File) selectedNode.getUserObject();
        jTextField1.setText(selectedFile.getAbsolutePath());
    }
    }
    private void buildFileTree(DefaultMutableTreeNode parentNode, File parentFile) {
        File[] files = parentFile.listFiles();
        if (files != null) {
            for (File file : files) {
                DefaultMutableTreeNode childNode = new DefaultMutableTreeNode(file);
                parentNode.add(childNode);
                if (file.isDirectory()) {
                    buildFileTree(childNode, file);
                }
            }
        }
    }
    private void refreshFileTree() {
        DefaultMutableTreeNode root = (DefaultMutableTreeNode) treeModel.getRoot();
        root.removeAllChildren();
        buildFileTree(root, new File("D://"));
        treeModel.reload();
    }
    
    private void cariFile() {
        String textDicari = TextSearch.getText();

        if (textDicari != null && !textDicari.isEmpty()) {
            DefaultMutableTreeNode rootNode = (DefaultMutableTreeNode) jTree1.getModel().getRoot();
            List<TreePath> matchingPaths = new ArrayList<>();
            dfsSearch(rootNode, textDicari, matchingPaths);
            if (!matchingPaths.isEmpty()) { 
                for (TreePath path : matchingPaths) {
                    jTree1.addSelectionPath(path);
                    jTree1.scrollPathToVisible(path);
                }
            } else {
            JOptionPane.showMessageDialog(this, "File atau folder tidak ditemukan " + textDicari);
            }
        }else{
            JOptionPane.showMessageDialog(this, "Masukkan Teks Terlebih dahulu " + textDicari);
        }
    }
    
    private void dfsSearch(DefaultMutableTreeNode node, String textDicari, List<TreePath> matchingPaths) {
        if (node.toString().toLowerCase().contains(textDicari.toLowerCase())) {
            matchingPaths.add(new TreePath(node.getPath()));
        }
            for (int i = 0; i < node.getChildCount(); i++) {
            dfsSearch((DefaultMutableTreeNode) node.getChildAt(i), textDicari, matchingPaths);
        }
    }

   /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        Search_button = new javax.swing.JButton();
        addFile_button = new javax.swing.JButton();
        AddFolder_button = new javax.swing.JButton();
        renameFile_button = new javax.swing.JButton();
        deleteFile_button = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();
        jTextField1 = new javax.swing.JTextField();
        TextSearch = new javax.swing.JTextField();
        AboutUs = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setBorder(null);
        jButton1.setBorderPainted(false);
        jButton1.setContentAreaFilled(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1280, 30, 40, 30));

        Search_button.setBorder(null);
        Search_button.setBorderPainted(false);
        Search_button.setContentAreaFilled(false);
        Search_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Search_buttonActionPerformed(evt);
            }
        });
        getContentPane().add(Search_button, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 90, 80, 30));

        addFile_button.setBorder(null);
        addFile_button.setBorderPainted(false);
        addFile_button.setContentAreaFilled(false);
        addFile_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addFile_buttonActionPerformed(evt);
            }
        });
        getContentPane().add(addFile_button, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 210, 250, 60));

        AddFolder_button.setBorder(null);
        AddFolder_button.setBorderPainted(false);
        AddFolder_button.setContentAreaFilled(false);
        AddFolder_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddFolder_buttonActionPerformed(evt);
            }
        });
        getContentPane().add(AddFolder_button, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 280, 250, 70));

        renameFile_button.setBorder(null);
        renameFile_button.setBorderPainted(false);
        renameFile_button.setContentAreaFilled(false);
        renameFile_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                renameFile_buttonActionPerformed(evt);
            }
        });
        getContentPane().add(renameFile_button, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 360, 250, 60));

        deleteFile_button.setBorder(null);
        deleteFile_button.setBorderPainted(false);
        deleteFile_button.setContentAreaFilled(false);
        deleteFile_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteFile_buttonActionPerformed(evt);
            }
        });
        getContentPane().add(deleteFile_button, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 430, 250, 60));

        jScrollPane1.setViewportView(jTree1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 180, 520, 480));

        jTextField1.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 90, 640, 30));

        TextSearch.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        TextSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextSearchActionPerformed(evt);
            }
        });
        getContentPane().add(TextSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 90, 250, 30));

        AboutUs.setBorder(null);
        AboutUs.setBorderPainted(false);
        AboutUs.setContentAreaFilled(false);
        AboutUs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AboutUsActionPerformed(evt);
            }
        });
        getContentPane().add(AboutUs, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 700, 110, 30));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui_Frame/1.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addFile_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addFile_buttonActionPerformed
        // TODO add your handling code here:
        DefaultMutableTreeNode selectedNode = (DefaultMutableTreeNode) jTree1.getLastSelectedPathComponent();

            if (selectedNode != null) {
                String newFileName = javax.swing.JOptionPane.showInputDialog("Masukkan nama file baru:");
                if (newFileName != null && !newFileName.isEmpty()) {
                  File selectedFile = (File) selectedNode.getUserObject();
                  Path selectedPath = selectedFile.toPath();
                  Path newFilePath = selectedPath.resolve(newFileName);

                    if (!Files.exists(newFilePath)) {
                    try {
                        Files.createFile(newFilePath);
                        refreshFileTree();
                    } catch (IOException e) {
                    e.printStackTrace();
                    }
                    } else {
                    JOptionPane.showMessageDialog(this, "Nama File Sudah Digunakan " + newFilePath, "File Duplikat", JOptionPane.WARNING_MESSAGE);
                    }
                }
            } else {
            JOptionPane.showMessageDialog(this, "Pilih Directory Atau Folder Terlebih Dahulu");
            }
    }//GEN-LAST:event_addFile_buttonActionPerformed

    private void AddFolder_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddFolder_buttonActionPerformed
        // TODO add your handling code here:
        DefaultMutableTreeNode selectedNode = (DefaultMutableTreeNode) jTree1.getLastSelectedPathComponent();
            if (selectedNode != null) {
                String newFolderName = javax.swing.JOptionPane.showInputDialog("Masukkan Nama Folder Baru:");
                if (newFolderName != null && !newFolderName.trim().isEmpty()) {
                File selectedFile = (File) selectedNode.getUserObject();
                Path selectedPath = selectedFile.toPath();
                Path newFolderPath = selectedPath.resolve(newFolderName);
                    if (!Files.exists(newFolderPath)) {
                        try {
                        Files.createDirectory(newFolderPath);
                        refreshFileTree();
                        } catch (IOException e) {
                            e.printStackTrace();
                        }
                    } else {
                    JOptionPane.showMessageDialog(this, "Nama Folder Sudah Digunakan" + newFolderPath, "File Duplikat", JOptionPane.WARNING_MESSAGE);
                    }
                }
            } else {
            JOptionPane.showMessageDialog(this, "Pilih Directory Atau Folder Terlebih Dahulu");
            }
    }//GEN-LAST:event_AddFolder_buttonActionPerformed

    private void renameFile_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_renameFile_buttonActionPerformed
        // TODO add your handling code here:
        DefaultMutableTreeNode selectedNode = (DefaultMutableTreeNode) jTree1.getLastSelectedPathComponent();
            if (selectedNode != null) {
                File selectedFile = (File) selectedNode.getUserObject();
                String newName = JOptionPane.showInputDialog(this, "Masukkan Nama Baru:");
                if (newName != null && !newName.trim().isEmpty()) {
                    Path newPath = selectedFile.toPath().resolveSibling(newName);
                    if (!Files.exists(newPath)) {
                        try {
                            Files.move(selectedFile.toPath(), newPath);                   
                            refreshFileTree();
                        } catch (IOException e) {
                            e.printStackTrace();
                        }
                    } else {
                    JOptionPane.showMessageDialog(this, "Nama Sudah Digunakan " + newPath, "File Duplikat", JOptionPane.WARNING_MESSAGE);
                    }           
                }
            }else {
            JOptionPane.showMessageDialog(this, "Pilih Folder Atau File  Terlebih Dahulu");
            }
    }//GEN-LAST:event_renameFile_buttonActionPerformed

    private void deleteFile_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteFile_buttonActionPerformed
        // TODO add your handling code here:          
        DefaultMutableTreeNode selectedNode = (DefaultMutableTreeNode) jTree1.getLastSelectedPathComponent();
            if (selectedNode != null) {
                File selectedFile = (File) selectedNode.getUserObject();
                try {
                    if (selectedFile.isDirectory()) {
                        deleteFolderdanFile(selectedFile);
                    } else {
                        Files.delete(selectedFile.toPath());
                    }
                    refreshFileTree();
                } catch (IOException e) {
                    e.printStackTrace();
                }
            } else {
            JOptionPane.showMessageDialog(this, "Pilih Folder Atau File Terlebih Dahulu");
            }
    }
        private void deleteFolderdanFile(File folder) throws IOException {
        if (folder.exists()) {
            File[] contents = folder.listFiles();
            if (contents != null) {
                for (File Folder : contents) {
                    if (Folder.isDirectory()) {
                        deleteFolderdanFile(Folder);
                    } else {
                        Files.delete(Folder.toPath());
                    }
                }
           }
           Files.delete(folder.toPath());
        }
    }//GEN-LAST:event_deleteFile_buttonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
         dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void TextSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextSearchActionPerformed
        // TODO add your handling code here:
        cariFile();
    }//GEN-LAST:event_TextSearchActionPerformed

    private void Search_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Search_buttonActionPerformed
        // TODO add your handling code here:
        cariFile();
    }//GEN-LAST:event_Search_buttonActionPerformed

    private void AboutUsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AboutUsActionPerformed
        // TODO add your handling code here:
        AboutUs aboutus = new AboutUs();
        aboutus.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_AboutUsActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Final_Project.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Final_Project.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Final_Project.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Final_Project.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Final_Project().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AboutUs;
    private javax.swing.JButton AddFolder_button;
    private javax.swing.JButton Search_button;
    private javax.swing.JTextField TextSearch;
    private javax.swing.JButton addFile_button;
    private javax.swing.JButton deleteFile_button;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTree jTree1;
    private javax.swing.JButton renameFile_button;
    // End of variables declaration//GEN-END:variables
}
